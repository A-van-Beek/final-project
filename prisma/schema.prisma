// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// gender      ENUM ('M','F')  NOT NULL, 
//online: Boolean @default(value: 0)
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  username       String     @unique
  password       String
  email          String
  phoneNumber    Int
  profilePicture String?
  bookings       Bookings[]
  reviews       Reviews[]
}

model amenities {
  id   String @id @default(uuid())
  name String @unique

  propertyId String
  property Property @relation(fields: [propertyId], references: [id])
  @@index([propertyId])
}

model Bookings {
  id String @id @default(uuid())

  //relations by id
  userId     String
  propertyId String
  accommodationId String

  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Decimal
  bookingStatus  String

  user     User     @relation(fields: [userId], references: [id])
  property Property @relation(fields: [propertyId], references: [id])
 
   //indexes
  @@index([userId])
  @@index([propertyId])

}

model Hosts {
  id             String @id @default(uuid())
  username       String @unique
  password       String
  email          String
  phoneNumber    Int
  profilePicture String
  aboutMe        String

  property  Property[]
}

model Property {
  id            String     @id @default(uuid())
  title         String
  description   String
  location      String
  pricePerNight Decimal
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  hostId        String
  rating        Int
  bookings      Bookings[]
  amenities     amenities[]
  reviews       Reviews[]

  landlordId    String
  landlord Hosts @relation(fields: [landlordId], references: [id])
  @@index([landlordId])

}

model Reviews {
  id         String @id @default(uuid())
  userId     String
  propertyId String
  rating     Int
  comment    String

  huisjeId    String
  guestId     String
  guest     User     @relation(fields: [guestId], references: [id])
  property Property @relation(fields: [huisjeId], references: [id])
  @@index([huisjeId])
  @@index([userId])
}
