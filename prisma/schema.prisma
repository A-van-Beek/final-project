// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// gender      ENUM ('M','F')  NOT NULL, 
//online: Boolean @default(value: 0)
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Amenities {
  id            String @id @default(uuid())
  name          String @unique

  properties    Properties[]
}

model Bookings {
  id             String @id @default(uuid())
  userId         String   //koppeling met vakantieganger
  propertyId     String   //koppeling met accomodatie
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Decimal
  bookingStatus  String?  //status voorlopig niet verplicht

  users     Users     @relation(fields: [userId], references: [id])
  properties Properties @relation(fields: [propertyId], references: [id])
 
   //indexes
  @@index([userId])
  @@index([propertyId])
}

model Hosts {
  id             String @id @default(uuid())
  username       String @unique
  password       String
  name           String
  email          String
  phoneNumber    String
  profilePicture String
  aboutMe        String

  properties    Properties[]
}

model Users {
  id             String     @id @default(uuid())
  username       String     @unique
  password       String
  name           String
  email          String
  phoneNumber    String
  profilePicture String?
  bookings       Bookings[]
  reviews        Reviews[]
}

model Reviews {
  id         String @id @default(uuid())
  userId     String
  propertyId String
  rating     Int
  comment    String

  users    Users @relation(fields: [userId], references: [id])
  properties  Properties  @relation(fields: [propertyId], references: [id])

  @@index([userId])
  @@index([propertyId])
}

model Properties {
  id            String     @id @default(uuid())
  title         String
  description   String
  location      String
  pricePerNight Decimal
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  hostId        String
  rating        Int
  bookings      Bookings[]
  reviews       Reviews[]
  amenities     Amenities[]

  hosts     Hosts     @relation(fields: [hostId], references: [id])
}
